#include <stdio.h>

int main() {
    int n, i, time = 0, completed = 0;
    int at[20], bt[20], rt[20], pr[20], pid[20];
    int ct[20], tat[20], wt[20];
    int isDone[20] = {0};

    printf("Enter number of processes: ");
    scanf("%d", &n);

    // Input
    for (i = 0; i < n; i++) {
        pid[i] = i + 1;
        printf("Enter Arrival Time, Burst Time, Priority for Process %d: ", pid[i]);
        scanf("%d %d %d", &at[i], &bt[i], &pr[i]);
        rt[i] = bt[i]; // Remaining time
    }

    while (completed < n) {
        int idx = -1, min_priority = 9999;

        for (i = 0; i < n; i++) {
            if (at[i] <= time && rt[i] > 0) {
                if (pr[i] < min_priority) {
                    min_priority = pr[i];
                    idx = i;
                } else if (pr[i] == min_priority && at[i] < at[idx]) {
                    idx = i;
                }
            }
        }

        if (idx != -1) {
            rt[idx]--; // Execute 1 unit time

            if (rt[idx] == 0) {
                completed++;
                ct[idx] = time + 1;
                tat[idx] = ct[idx] - at[idx];
                wt[idx] = tat[idx] - bt[idx];
            }
        }

        time++;
    }

    printf("\nProcess\tAT\tBT\tPR\tWT\tTAT\tCT\n");
    for (i = 0; i < n; i++) {
        printf("P%d\t%d\t%d\t%d\t%d\t%d\t%d\n", pid[i], at[i], bt[i], pr[i], wt[i], tat[i], ct[i]);
    }
    
    float avg_wt = 0, avg_tat = 0;
    for (i = 0; i < n; i++) {
        avg_wt += wt[i]; avg_tat += tat[i];
    }
    printf("\nAverage Waiting Time: %.2f", avg_wt / n);
    printf("\nAverage Turnaround Time: %.2f\n", avg_tat / n);

    return 0;
}
